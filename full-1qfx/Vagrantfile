# -*- mode: ruby -*-
# vi: set ft=ruby :

# On Windows, only supported if running under Linux Subsystem for Windows
if Vagrant::Util::Platform.windows?
    puts 'Linux Subsystem for Windows required on Windows hosts.  Please refer to Windows.md for further instruction.'
    abort 
end

VAGRANTFILE_API_VERSION = "2"

## Generate a unique ID for this project
UUID = [*('A'..'Z')].sample(6).join

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

    re_name  = "vqfx"
    pfe_name = "vqfx-pfe"

    ##############################
    ## Packet Forwarding Engine ##
    ##############################
    config.vm.define pfe_name do |vqfxpfe|
        vqfxpfe.ssh.insert_key = false
        vqfxpfe.vm.box = 'juniper/vqfx10k-pfe'

        # DO NOT REMOVE / NO VMtools installed
        vqfxpfe.vm.synced_folder '.', '/vagrant', disabled: true
        vqfxpfe.vm.network 'private_network', auto_config: false, nic_type: '82540EM', virtualbox__intnet: "#{UUID}_vqfx_internal"
    end

    ##########################
    ## Routing Engine  #######
    ##########################
    config.vm.define re_name do |vqfx|
        vqfx.ssh.insert_key = false
        vqfx.vm.hostname = "vqfx"
        vqfx.vm.box = 'juniper/vqfx10k-re'

        # VM can be really slow unless COM1 is connected to something.
        (File.exist?("/proc/version") and File.readlines("/proc/version").grep(/(Microsoft|WSL)/).size > 0) ? ( re_log = "NUL" ) : ( re_log = "/dev/null" )
        vqfx.vm.provider "virtualbox" do |v|
            v.customize ["modifyvm", :id, "--uartmode1", "file", re_log]
        end

        # DO NOT REMOVE / NO VMtools installed
        vqfx.vm.synced_folder '.', '/vagrant', disabled: true

        # Management ports
        vqfx.vm.network 'private_network', auto_config: false, nic_type: '82540EM', virtualbox__intnet: "#{UUID}_vqfx_internal"
        vqfx.vm.network 'private_network', auto_config: false, nic_type: '82540EM', virtualbox__intnet: "#{UUID}_reserved-bridge"

        ## Dataplane ports
        (1..5).each do |seg_id|
           vqfx.vm.network 'private_network', auto_config: false, nic_type: '82540EM', virtualbox__intnet: "#{UUID}_seg#{seg_id}"
        end
    end
end
