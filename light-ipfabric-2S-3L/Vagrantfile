# -*- mode: ruby -*-
# vi: set ft=ruby :

# On Windows, only supported if running under Linux Subsystem for Windows
if Vagrant::Util::Platform.windows?
    puts 'Linux Subsystem for Windows required on Windows hosts.  Please refer to Windows.md for further instruction.'
    abort 
end

VAGRANTFILE_API_VERSION = "2"

## Generate a unique ID for this project
UUID = "OINGJD"

## Define port mapping to build the Fabric
spine_port_map = {  1 => [1,3,5,7],
                    2 => [2,4,6,8] }

leaf_port_map  = {  1 => [1,2],
                    2 => [3,4],
                    3 => [5,6],
                    4 => [7,8]}

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

    config.ssh.insert_key = false

    # Path used for routing engine console log.
    (File.exist?("/proc/version") and File.readlines("/proc/version").grep(/(Microsoft|WSL)/).size > 0) ? ( re_log = "NUL" ) : ( re_log = "/dev/null" )

    ##########################
    ## Spine           #######
    ##########################
    (1..2).each do |id|
        re_name  = ( "spine" + id.to_s ).to_sym
        re_log   = ( "spine" + id.to_s + ".log" )

        config.vm.define re_name do |vqfx|
            vqfx.vm.hostname = "spine#{id}"
            vqfx.vm.box = 'juniper/vqfx10k-re'
            vqfx.vm.boot_timeout = 600

            # VM can be really slow unless COM1 is connected to something.
            vqfx.vm.provider "virtualbox" do |v|
                v.customize ["modifyvm", :id, "--uartmode1", "file", re_log]
            end

            # DO NOT REMOVE / NO VMtools installed
            vqfx.vm.synced_folder '.', '/vagrant', disabled: true

            # Management port (em1 / em2)
            vqfx.vm.network 'private_network', auto_config: false, nic_type: '82540EM', virtualbox__intnet: "#{UUID}_vqfx_internal_#{id}"
            vqfx.vm.network 'private_network', auto_config: false, nic_type: '82540EM', virtualbox__intnet: "#{UUID}_reserved-bridge"

            # (em3, em4)
            (1..2).each do |seg_id|
                vqfx.vm.network 'private_network', auto_config: false, nic_type: '82540EM', virtualbox__intnet: "#{UUID}_none"
            end

            # (em5, em8)
            (0..3).each do |seg_id|
                vqfx.vm.network 'private_network', auto_config: false, nic_type: '82540EM', virtualbox__intnet: "#{UUID}_seg#{spine_port_map[id][seg_id]}"
            end
        end
    end

    ##########################
    ## Leaf           #######
    ##########################
    (1..3).each do |id|
        re_name  = ( "leaf" + id.to_s ).to_sym
        srv_name = ( "srv" + id.to_s ).to_sym

        config.vm.define re_name do |vqfx|
            vqfx.vm.hostname = "leaf#{id}"
            vqfx.vm.box = 'juniper/vqfx10k-re'
            vqfx.vm.boot_timeout = 600

            # VM can be really slow unless COM1 is connected to something.
            vqfx.vm.provider "virtualbox" do |v|
                v.customize ["modifyvm", :id, "--uartmode1", "file", re_log]
            end

            # DO NOT REMOVE / NO VMtools installed
            vqfx.vm.synced_folder '.', '/vagrant', disabled: true

            # Management port (em1 / em2)
            vqfx.vm.network 'private_network', auto_config: false, nic_type: '82540EM', virtualbox__intnet: "#{UUID}_vqfx_internal_#{id}"
            vqfx.vm.network 'private_network', auto_config: false, nic_type: '82540EM', virtualbox__intnet: "#{UUID}_reserved-bridge"
            #
            # (em3, em4)
            (1..2).each do |seg_id|
                vqfx.vm.network 'private_network', auto_config: false, nic_type: '82540EM', virtualbox__intnet: "#{UUID}_none"
            end

            # (em5, em6)
            (0..1).each do |seg_id|
                vqfx.vm.network 'private_network', auto_config: false, nic_type: '82540EM', virtualbox__intnet: "#{UUID}_seg#{leaf_port_map[id][seg_id]}"
            end

            # em7 facing server
            vqfx.vm.network 'private_network', auto_config: false, nic_type: '82540EM', virtualbox__intnet: "#{UUID}_server_#{id}"
        end

        ##########################
        ## Server          #######
        ##########################
        config.vm.define srv_name do |srv|
            srv.vm.box = "robwc/minitrusty64"
            srv.vm.hostname = "srv#{id}"
            srv.vm.network 'private_network', ip: "172.16.#{id}.2", nic_type: '82540EM', virtualbox__intnet: "#{UUID}_server_#{id}"
            srv.ssh.insert_key = true
            srv.vm.provision "shell",
               inline: "sudo route add -net 172.16.0.0 netmask 255.255.0.0 gw 172.16.#{id}.1"
        end
    end

    #############################
    # Box provisioning    #######
    #############################
    config.vm.provision "ansible" do |ansible|
        ansible.compatibility_mode = "2.0"
        ansible.config_file = "ansible.cfg"
        ansible.groups = {
            "vqfx10k"      => ["spine1", "spine2", "leaf1", "leaf2", "leaf3" ],
            "spine"        => ["spine1", "spine2"],
            "leaf"         => ["leaf1", "leaf2", "leaf3" ],
            "server"       => ["srv1", "srv2", "srv3" ],
            "all:children" => ["vqfx10k", "server" ]
        }
        ansible.playbook = "pb.conf.all.commit.yaml"
    end
end
